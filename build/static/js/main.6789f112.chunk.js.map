{"version":3,"sources":["logo.svg","components/MyTextInput.jsx","components/MainHeading.jsx","views/Form.jsx","views/Forms.jsx","components/Header.jsx","views/FormInfo.jsx","App.js","index.js"],"names":["MyTextInput","label","textarea","select","controlProps","props","useField","field","meta","InputEl","Textarea","Select","Input","isInvalid","error","touched","MainHeading","text","textAlign","padding","as","size","Form","navigate","useNavigate","initialValues","fullName","reason","position","need","phone","message","email","validationSchema","Yup","required","onSubmit","values","a","setSubmitting","axios","post","data","formik","noValidate","templateColumns","sm","md","gap","width","colSpan","name","type","placeholder","isRequired","rowSpan","flex","display","flexDirection","height","heigth","isFullWidth","isLoading","isSubmitting","loadingText","colorScheme","variant","Forms","useState","forms","setForms","useEffect","get","map","form","cursor","onClick","_id","Header","margin","isFitted","FormInfo","setForm","formId","useParams","spacing","Object","keys","key","mr","justifyContent","App","pt","maxW","centerContent","index","element","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6789f112.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Textarea,\n  Select,\n} from \"@chakra-ui/react\";\nimport { Formik, Form as FormikForm, useField } from \"formik\";\n\n// const MyTextInput = ({ label, textarea, ...props }) => {\n//   const [field, meta] = useField(props);\n//   const InputEl = textarea ? Textarea : Input;\n//   return (\n//     <>\n//       <FormControl isInvalid={meta.error && meta.touched}>\n//         <FormLabel htmlFor={props.id || props.name}>{label}</FormLabel>\n//         <InputEl {...field} {...props} />\n//         <FormErrorMessage>{meta.error}</FormErrorMessage>\n//       </FormControl>\n//     </>\n//   );\n// };\n\nconst MyTextInput = ({\n  label,\n  textarea,\n  select,\n  controlProps = {},\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const InputEl = textarea ? Textarea : select ? Select : Input;\n  return (\n    <>\n      <FormControl\n        // display=\"flex\"\n        // flexDirection=\"column\"\n        isInvalid={meta.error && meta.touched}\n        {...controlProps}\n      >\n        <FormLabel>{label}</FormLabel>\n        <InputEl {...field} {...props} />\n        <FormErrorMessage>{meta.error}</FormErrorMessage>\n      </FormControl>\n    </>\n  );\n};\n\nexport default MyTextInput;\n","import React from \"react\";\nimport { Heading } from \"@chakra-ui/react\";\nconst MainHeading = ({ text }) => {\n  return (\n    <>\n      <Heading textAlign=\"center\" padding={[\"5\", \"10\"]} as=\"h3\" size=\"lg\">\n        {text}\n      </Heading>\n    </>\n  );\n};\n\nexport default MainHeading;\n","import React from \"react\";\n\nimport { Grid, GridItem, Button, Heading } from \"@chakra-ui/react\";\nimport { PhoneIcon, AddIcon, WarningIcon, CheckIcon } from \"@chakra-ui/icons\";\nimport { Formik, Form as FormikForm, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport axios from \"axios\";\nimport MyTextInput from \"../components/MyTextInput\";\nimport { useNavigate } from \"react-router\";\nimport MainHeading from \"../components/MainHeading\";\n\nconst Form = () => {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <MainHeading text=\"Formulario\" />\n\n      <Formik\n        initialValues={{\n          fullName: \"\",\n          reason: \"\",\n          position: \"\",\n          need: \"\",\n          phone: \"\",\n          message: \"\",\n          email: \"\",\n        }}\n        validationSchema={Yup.object({\n          // fullName: Yup.string()\n          //   .max(15, \"Must be 15 characters or less\")\n          //   .required(\"Requerido\"),\n          fullName: Yup.string().required(\"Requerido\"),\n          reason: Yup.string().required(\"Requerido\"),\n          position: Yup.string().required(\"Requerido\"),\n          need: Yup.string().required(\"Requerido\"),\n          phone: Yup.number().required(\"Requerido\"),\n          message: Yup.string().required(\"Requerido\"),\n          email: Yup.string().email(\"correo no valido\").required(\"Requerido\"),\n        })}\n        onSubmit={async (values, { setSubmitting }) => {\n          const { data: formCreated } = await axios.post(\"/api/forms\", values);\n          setSubmitting(false);\n          navigate(\"/forms\");\n        }}\n      >\n        {(formik) => (\n          <FormikForm noValidate>\n            <Grid\n              // h=\"200px\"\n              // templateRows=\"repeat(2, 1fr)\"\n              // templateColumns={[\"repeat(1, 1fr)\", \"repeat(2, 1fr)\"]}\n              templateColumns={{ sm: \"repeat(1, 1fr)\", md: \"repeat(2, 1fr)\" }}\n              gap={4}\n              width=\"100%\"\n            >\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  label=\"Nombre y Apellido\"\n                  name=\"fullName\"\n                  type=\"text\"\n                  placeholder=\"Nombre y Apellido\"\n                  controlProps={{ isRequired: true }}\n                />\n              </GridItem>\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  label=\"Razón Social\"\n                  name=\"reason\"\n                  type=\"text\"\n                  placeholder=\"Razón Social\"\n                  controlProps={{ isRequired: true }}\n                />\n              </GridItem>\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  label=\"Cargo\"\n                  name=\"position\"\n                  type=\"text\"\n                  placeholder=\"Cargo\"\n                  controlProps={{ isRequired: true }}\n                />\n              </GridItem>\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  select\n                  label=\"Necesidad\"\n                  name=\"need\"\n                  placeholder=\"Necesidad\"\n                  controlProps={{ isRequired: true }}\n                >\n                  <option>Atracción y Selección</option>\n                  <option>Evaluación Psicolaboral</option>\n                  <option>Capacitación & E-Learning</option>\n                  <option>Consultoría & Desarrollo</option>\n                  <option>Outplacement</option>\n                </MyTextInput>\n              </GridItem>\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  label=\"Celular\"\n                  name=\"phone\"\n                  type=\"text\"\n                  placeholder=\"Celular\"\n                  controlProps={{ isRequired: true }}\n                />\n              </GridItem>\n              <GridItem rowSpan={2} colSpan={1}>\n                <MyTextInput\n                  textarea\n                  label=\"Mensaje\"\n                  name=\"message\"\n                  type=\"text\"\n                  placeholder=\"Mensaje\"\n                  flex=\"1\"\n                  controlProps={{\n                    isRequired: true,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: \"100%\",\n                  }}\n                />\n              </GridItem>\n              <GridItem colSpan={1}>\n                <MyTextInput\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  heigth=\"100%\"\n                  controlProps={{ isRequired: true }}\n                />\n              </GridItem>\n            </Grid>\n            <br />\n\n            <Button\n              type=\"submit\"\n              isFullWidth\n              isLoading={formik.isSubmitting}\n              loadingText=\"Submitting\"\n              colorScheme=\"teal\"\n              variant=\"outline\"\n            >\n              Submit\n            </Button>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport MainHeading from \"../components/MainHeading\";\n\nconst Forms = () => {\n  const navigate = useNavigate();\n\n  const [forms, setForms] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const { data: forms } = await axios.get(\"/api/forms\");\n      setForms(forms);\n    })();\n\n    // return () => {\n    //   cleanup;\n    // };\n  }, []);\n\n  return (\n    <div>\n      {/* <h2>Forms</h2> */}\n      <MainHeading text=\"Formularios\" />\n\n      <Table colorScheme=\"teal\" variant=\"striped\">\n        <Thead>\n          <Tr>\n            <Th>Nombre y Apellido</Th>\n            <Th>Razon Social</Th>\n            <Th>Necesidad</Th>\n            <Th>...</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {forms.map((form) => (\n            <Tr\n              key={form._id}\n              cursor=\"pointer\"\n              onClick={() => navigate(form._id)}\n            >\n              <Td>{form.fullName}</Td>\n              <Td>{form.reason}</Td>\n              <Td>{form.need}</Td>\n              <Td>...</Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Forms;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport {\n  Box,\n  ChakraProvider,\n  Container,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\n\nimport Form from \"../views/Form\";\nimport Forms from \"../views/Forms\";\nconst Header = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Box width={[\"sm\", \"xl\"]} margin=\"0 auto\">\n        <Tabs colorScheme=\"teal\" isFitted variant=\"enclosed\">\n          <TabList>\n            <Tab onClick={() => navigate(\"/form\")}>Formulario</Tab>\n            <Tab onClick={() => navigate(\"/forms\")}>Formularios</Tab>\n          </TabList>\n          {/* <TabPanels>\n          </TabPanels> */}\n        </Tabs>\n      </Box>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListIcon,\n  OrderedList,\n  UnorderedList,\n  Button,\n  Box,\n  Tag,\n} from \"@chakra-ui/react\";\n\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\n// import { MdSettings } from \"react-icons/md\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MainHeading from \"../components/MainHeading\";\n\nconst FormInfo = () => {\n  const [form, setForm] = useState({});\n  const navigate = useNavigate();\n  const { formId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const { data: form } = await axios.get(`/api/forms/${formId}`);\n      setForm(form);\n    })();\n  }, []);\n\n  return (\n    <>\n      <MainHeading text=\"Info\" />\n\n      <List spacing={3}>\n        {Object.keys(form).map((key) => (\n          <ListItem key={key}>\n            <Tag mr=\"4\" variant=\"solid\" colorScheme=\"teal\">\n              {key}\n            </Tag>\n            {form[key]}\n          </ListItem>\n        ))}\n      </List>\n      <br />\n\n      <Box display=\"flex\" width=\"100%\" justifyContent=\"end\">\n        <Button\n          onClick={() => navigate(\"/forms\")}\n          colorScheme=\"teal\"\n          variant=\"outline\"\n        >\n          Volver\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default FormInfo;\n\n/*\n<ListItem>\n          <ListIcon as={MdCheckCircle} color=\"green.500\" /> \n          Lorem ipsum dolor sit amet, consectetur adipisicing elit\n        </ListItem>\n        <ListItem>\n           <ListIcon as={MdCheckCircle} color=\"green.500\" /> \n          Assumenda, quia temporibus eveniet a libero incidunt suscipit\n        </ListItem>\n        <ListItem>\n           <ListIcon as={MdCheckCircle} color=\"green.500\" /> \n          Quidem, ipsam illum quis sed voluptatum quae eum fugit earum\n        </ListItem>\n         You can also use custom icons from react-icons \n         <ListItem>\n          <ListIcon as={MdSettings} color=\"green.500\" />\n          Quidem, ipsam illum quis sed voluptatum quae eum fugit earum\n        </ListItem> \n\n*/\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nimport Form from \"./views/Form\";\nimport Forms from \"./views/Forms\";\nimport {\n  Box,\n  ChakraProvider,\n  Container,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport Header from \"./components/Header\";\nimport FormInfo from \"./views/FormInfo\";\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router>\n        <Box pt={[\"5\", \"10\"]}>\n          <Header />\n        </Box>\n\n        <Container maxW=\"container.sm\" centerContent>\n          <Routes>\n            <Route index element={<Form />} />\n            <Route path=\"/form\" element={<Form />} />\n            <Route path=\"/forms\" element={<Forms />} />\n            <Route path=\"/forms/:formId\" element={<FormInfo />} />\n          </Routes>\n        </Container>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n\n{\n  /* <div className=\"App\">\n<header className=\"App-header\">\n  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  <p>\n    Edit <code>src/App.js</code> and save to reload.\n  </p>\n  <a\n    className=\"App-link\"\n    href=\"https://reactjs.org\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Learn React\n  </a>\n</header>\n</div> */\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}